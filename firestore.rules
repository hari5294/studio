
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can view any public profile, but only edit their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Badges can be read by anyone, but only the creator can update or delete.
    match /badges/{badgeId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.creatorId;

      // Badge owners can be read by anyone. Only a new user can claim ownership.
      match /owners/{userId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && request.auth.uid == userId;
        allow delete: if false; // Ownership is permanent
      }

      // Followers can be read by anyone. Any user can follow/unfollow.
      match /followers/{userId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Share links can only be read/updated via the specific transaction that redeems them.
    match /shareLinks/{linkId} {
        allow read, write: if false; // Handled by backend logic/transactions
    }

    // Users can only manage their own notifications.
    match /users/{userId}/notifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
